{
	// Place your mini-messenger workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
"snp_requestFetch_Post": {
		"prefix": "fetch",
		"body": [
			"async function snp_FetchFunc() {",
			"    const url = \"/api/path\";",
			"    const param = { key: \"value\" };",
			"    try {",
			"        const res = await connect.requestFetch(url, param); // 응답",
			"        const statCd = res.status;",
			"        if (res && statCd === 200) { // 응답 성공",
			"            console.log(\"Response received: \", res.data);",
			"        } else if (statCd === 401) { // 응답 실패",
			"            console.log(\"Failed response: \", res.data);",
			"        } else {",
			"            console.log(\"Unexpected response status: \", statCd);",
			"        }",
			"    } catch (err) { // 서버 에러",
			"        console.log(\"Error: \", err);",
			"    }",
			"}"
		],
		"description": "snp_requestFetch_Post"
	}
}
